{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_circuit",
						"type": "DatasetReference"
					},
					"name": "srccircuitdb"
				},
				{
					"dataset": {
						"referenceName": "src_races",
						"type": "DatasetReference"
					},
					"name": "srcracesdb",
					"description": "Import data from src_races"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joincicuitsresults"
				},
				{
					"name": "filteredcolumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          circuitId as integer,",
				"          circuitRef as string,",
				"          name as string,",
				"          location as string,",
				"          country as string,",
				"          lat as string,",
				"          lng as string,",
				"          alt as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srccircuitdb",
				"source(output(",
				"          raceId as integer,",
				"          year as integer,",
				"          round as integer,",
				"          circuitId as integer,",
				"          name as string,",
				"          date as date,",
				"          time as timestamp,",
				"          url as string,",
				"          fp1_date as string,",
				"          fp1_time as string,",
				"          fp2_date as string,",
				"          fp2_time as string,",
				"          fp3_date as string,",
				"          fp3_time as string,",
				"          quali_date as string,",
				"          quali_time as string,",
				"          sprint_date as string,",
				"          sprint_time as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> srcracesdb",
				"srccircuitdb, srcracesdb join(srccircuitdb@circuitId == srcracesdb@circuitId,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joincicuitsresults",
				"joincicuitsresults select(mapColumn(",
				"          circuitId = srccircuitdb@circuitId,",
				"          circuitRef,",
				"          name = srccircuitdb@name,",
				"          location,",
				"          country,",
				"          raceId,",
				"          year,",
				"          round,",
				"          circuitId = srcracesdb@circuitId,",
				"          name = srcracesdb@name,",
				"          date,",
				"          time,",
				"          url = srcracesdb@url",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> filteredcolumns",
				"filteredcolumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}